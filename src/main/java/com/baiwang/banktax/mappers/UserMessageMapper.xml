<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.baiwang.banktax.dao.UserMessageMapper" >
  <resultMap id="BaseResultMap" type="com.baiwang.banktax.beans.UserMessage" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="createdtime" property="createdtime" jdbcType="TIMESTAMP" />
    <result column="uid_to" property="uidTo" jdbcType="BIGINT" />
    <result column="uid_from" property="uidFrom" jdbcType="BIGINT" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="msg_status" property="msgStatus" jdbcType="BIT" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, createdtime, uid_to, uid_from, content, msg_status, remark
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from bt_user_message
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from bt_user_message
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.baiwang.banktax.beans.UserMessage" >
    insert into bt_user_message (id, createdtime, uid_to, 
      uid_from, content, msg_status, 
      remark)
    values (#{id,jdbcType=BIGINT}, #{createdtime,jdbcType=TIMESTAMP}, #{uidTo,jdbcType=BIGINT}, 
      #{uidFrom,jdbcType=BIGINT}, #{content,jdbcType=VARCHAR}, #{msgStatus,jdbcType=BIT}, 
      #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.baiwang.banktax.beans.UserMessage" >
    insert into bt_user_message
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="createdtime != null" >
        createdtime,
      </if>
      <if test="uidTo != null" >
        uid_to,
      </if>
      <if test="uidFrom != null" >
        uid_from,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="msgStatus != null" >
        msg_status,
      </if>
      <if test="remark != null" >
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="createdtime != null" >
        #{createdtime,jdbcType=TIMESTAMP},
      </if>
      <if test="uidTo != null" >
        #{uidTo,jdbcType=BIGINT},
      </if>
      <if test="uidFrom != null" >
        #{uidFrom,jdbcType=BIGINT},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="msgStatus != null" >
        #{msgStatus,jdbcType=BIT},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.baiwang.banktax.beans.UserMessage" >
    update bt_user_message
    <set >
      <if test="createdtime != null" >
        createdtime = #{createdtime,jdbcType=TIMESTAMP},
      </if>
      <if test="uidTo != null" >
        uid_to = #{uidTo,jdbcType=BIGINT},
      </if>
      <if test="uidFrom != null" >
        uid_from = #{uidFrom,jdbcType=BIGINT},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="msgStatus != null" >
        msg_status = #{msgStatus,jdbcType=BIT},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.baiwang.banktax.beans.UserMessage" >
    update bt_user_message
    set createdtime = #{createdtime,jdbcType=TIMESTAMP},
      uid_to = #{uidTo,jdbcType=BIGINT},
      uid_from = #{uidFrom,jdbcType=BIGINT},
      content = #{content,jdbcType=VARCHAR},
      msg_status = #{msgStatus,jdbcType=BIT},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>