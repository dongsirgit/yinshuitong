<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.baiwang.banktax.dao.ApplyLoanMapper" >
  <resultMap id="BaseResultMap" type="com.baiwang.banktax.beans.ApplyLoan">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="uid" jdbcType="BIGINT" property="uid" />
    <result column="apply_type" jdbcType="TINYINT" property="applyType" />
    <result column="apply_time" jdbcType="TIMESTAMP" property="applyTime" />
    <result column="apply_term" jdbcType="INTEGER" property="applyTerm" />
    <result column="apply_term_type" jdbcType="TINYINT" property="applyTermType" />
    <result column="apply_term_num" jdbcType="INTEGER" property="applyTermNum" />
    <result column="ap_education" jdbcType="VARCHAR" property="apEducation" />
    <result column="ap_marry" jdbcType="BIT" property="apMarry" />
    <result column="ap_chargeterm" jdbcType="TINYINT" property="apChargeterm" />
    <result column="is_realcharge" jdbcType="BIT" property="isRealcharge" />
    <result column="apply_quota" jdbcType="INTEGER" property="applyQuota" />
    <result column="apply_note" jdbcType="VARCHAR" property="applyNote" />
    <result column="contact_name" jdbcType="VARCHAR" property="contactName" />
    <result column="telephone" jdbcType="VARCHAR" property="telephone" />
    <result column="bank" jdbcType="VARCHAR" property="bank" />
    <result column="bankname" jdbcType="VARCHAR" property="bankname" />
    <result column="bank_account" jdbcType="VARCHAR" property="bankAccount" />
    <result column="prod_loan_id" jdbcType="INTEGER" property="prodLoanId" />
    <result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime" />
    <result column="service_org_id" jdbcType="INTEGER" property="serviceOrgId" />
    <result column="loancard" jdbcType="VARCHAR" property="loancard" />
    <result column="approve_status" jdbcType="TINYINT" property="approveStatus" />
    <result column="approve_time" jdbcType="TIMESTAMP" property="approveTime" />
    <result column="approve_muserid" jdbcType="INTEGER" property="approveMuserid" />
    <result column="loan_date_end" jdbcType="DATE" property="loanDateEnd" />
    <result column="warning_sum" jdbcType="INTEGER" property="warningSum" />
    <result column="has_propertyright" jdbcType="BIT" property="hasPropertyright" />
    <result column="approve_note" jdbcType="VARCHAR" property="approveNote" />
    <result column="judge_note" jdbcType="VARCHAR" property="judgeNote" />
    <result column="judge_time" jdbcType="TIMESTAMP" property="judgeTime" />
    <result column="judge_muserid" jdbcType="INTEGER" property="judgeMuserid" />
    <result column="warning_later" jdbcType="TINYINT" property="warningLater" />
    <result column="warning_early" jdbcType="TINYINT" property="warningEarly" />
    <result column="approve_quota" jdbcType="INTEGER" property="approveQuota" />
    <result column="loan_date" jdbcType="DATE" property="loanDate" />
    <result column="loan_guaranty" jdbcType="BIT" property="loanGuaranty" />
    <result column="is_pub" jdbcType="BIT" property="isPub" />
    <result column="isdel" jdbcType="BIT" property="isdel" />
  </resultMap>
  <sql id="Base_Column_List">
    id, uid, apply_type, apply_time, apply_term, apply_term_type, apply_term_num, ap_education, 
    ap_marry, ap_chargeterm, is_realcharge, apply_quota, apply_note, contact_name, telephone, 
    bank, bankname, bank_account, prod_loan_id, modify_time, service_org_id, loancard, 
    approve_status, approve_time, approve_muserid, loan_date_end, warning_sum, has_propertyright, 
    approve_note, judge_note, judge_time, judge_muserid, warning_later, warning_early, 
    approve_quota, loan_date, loan_guaranty, is_pub, isdel
  </sql>
  
  
  <!--  v2 -->
  <update id="submit" parameterType="map">
  	update bt_apply_loan 
  	set approve_status='-2', modify_time = NOW()   
  	where uid = #{uid} and id = #{id} 
  </update>
  
  <!--  v2 -->
  <select id="queryLoanList" parameterType="long" resultMap="BaseResultMap">
  	select 
    <include refid="Base_Column_List" /> 
    from bt_apply_loan where uid = #{uid} and isdel = '0' order by id desc limit 1000
  </select>
  <!--  v2 -->
  <update id="delApplyLoan" parameterType="long">
  	update bt_apply_loan set isdel = '1', modify_time = NOW() where id = #{id}
  </update>
  
  <!-- 贷款信息浏览（从贷款申请列表发出） v2-->
  <select id="queryApplyLoan4show" parameterType="map" resultMap="BaseResultMap">
  	select 
    <include refid="Base_Column_List" /> 
    from bt_apply_loan 
    where id = #{id} and uid = #{uid} and isdel = '0'
  </select>
  <!--  v2 -->
  <select id="getCuser" parameterType="long" resultMap="com.baiwang.banktax.dao.IUserMapper.BaseResultMap">
  	select <include refid="com.baiwang.banktax.dao.IUserMapper.Base_Column_List" />
    from bt_cuser 
    where id = #{id} 
  </select>
  <!--  v2 -->
  <select id="getCuserByTaxSn" parameterType="com.baiwang.banktax.beans.Cuser" resultMap="com.baiwang.banktax.dao.IUserMapper.BaseResultMap">
  	select <include refid="com.baiwang.banktax.dao.IUserMapper.Base_Column_List" />
    from bt_cuser 
    where tax_sn = #{taxSn} and id !=#{id} 
  </select>
  <!--  v2 -->
  <select id="getCuserByCorpName" parameterType="com.baiwang.banktax.beans.Cuser" resultMap="com.baiwang.banktax.dao.IUserMapper.BaseResultMap">
  	select <include refid="com.baiwang.banktax.dao.IUserMapper.Base_Column_List" />
    from bt_cuser 
    where corp_name = #{corpName} and id !=#{id} 
  </select>
  
  
  <!-- 改版后 2.0 保存 -->
  <select id="queryApplyLoan" parameterType="map" resultMap="BaseResultMap">
  	select 
    <include refid="Base_Column_List" /> 
    from bt_apply_loan 
    where id = #{id} and uid = #{uid} and isdel = '0' and approve_status &lt;= '-3' 
  </select>
  <!--  v2 -->
  <insert id="saveLoan" parameterType="com.baiwang.banktax.beans.ApplyLoan" useGeneratedKeys="true" keyProperty="id">
  	insert into bt_apply_loan( uid, apply_type, apply_quota, apply_term_num, apply_term_type, contact_name, telephone, modify_time) 
  	values (#{uid,jdbcType=BIGINT}, #{applyType,jdbcType=TINYINT}, #{applyQuota,jdbcType=INTEGER}, #{applyTermNum,jdbcType=INTEGER}, 
  	'2', #{contactName,jdbcType=VARCHAR},  #{telephone,jdbcType=VARCHAR}, NOW()) 
  </insert>
  <!--  v2 -->
  <update id="updateLoan" parameterType="com.baiwang.banktax.beans.ApplyLoan">
  	update bt_apply_loan set apply_quota = #{applyQuota,jdbcType=INTEGER}, apply_term_num = #{applyTermNum,jdbcType=INTEGER}, 
  	contact_name = #{contactName,jdbcType=VARCHAR}, telephone = #{telephone,jdbcType=VARCHAR}, 
  	<if test="approveStatus != null">
		approve_status =#{approveStatus}, 
	</if>
  	modify_time = NOW() 
  	where id = #{id} and uid = #{uid}
  </update>
  <!--  v2 -->
  <select id="getPuserByIdcard" parameterType="com.baiwang.banktax.beans.Puser" resultMap="com.baiwang.banktax.dao.PuserMapper.BaseResultMap">
  	select <include refid="com.baiwang.banktax.dao.PuserMapper.Base_Column_List" />
    from bt_puser 
    where idcard = #{idcard} and id !=#{id} 
  </select>
  <!--  v2 -->
  <update id="updateUserInfo" parameterType="com.baiwang.banktax.beans.Cuser">
  	update bt_cuser set corp_name = #{corpName} ,tax_sn = #{taxSn} ,mobilephone = #{mobilephone}, 
  	ap_name = #{apName} ,idcard = #{idcard} ,update_time = NOW() 
  	where id =#{id}
  </update>
  <!--  v2 -->
  <update id="updateUserInfoPerson" parameterType="com.baiwang.banktax.beans.Puser">
  	update bt_puser set realname = #{realname}, phonenum = #{phonenum}, 
  	idcard = #{idcard}, update_time = NOW() 
  	where id =#{id}
  </update>
  <!--  v2 -->
  <select id="getPuser" resultMap="com.baiwang.banktax.dao.PuserMapper.BaseResultMap">
  	select <include refid="com.baiwang.banktax.dao.PuserMapper.Base_Column_List" />
    from bt_puser 
    where id =#{id} 
  </select>
  <!-- 提交时插入贷款返利 v2 -->
  <insert id="insertRebate">
  	insert into bt_cuser_rebate (apply_id, inviter_id, uid) 
    values (#{id,jdbcType=BIGINT}, #{inviteUid,jdbcType=BIGINT}, #{uid,jdbcType=BIGINT}) 
  </insert>
  <!-- 用户查询邀请的人 列表 v2 -->
  <select id="queryInviter" resultType="com.baiwang.banktax.beans.InviteeBean">
  	select c.id,c.user_name userName,c.reg_time regTime 
  	from bt_cuser c 
  	where invite_uid = #{id}  ORDER BY reg_time desc LIMIT #{page},#{pageSize}
  </select>

  <!-- 查询邀请的人是否获得贷款 -->
  <select id="querySucLoan" resultType="java.lang.Integer">
  	SELECT COUNT(id) from bt_apply_loan 
  	WHERE uid = #{id} and approve_status in('1','3') and isdel = '0'
  </select>
  <!-- 企业用户查询 我的奖励v2 -->
  <select id="queryInviterAward" resultType="com.baiwang.banktax.beans.InviterAwardBean">
  	SELECT c.user_name userName ,a.approve_quota approveQuota,r.rebate award ,r.rebate_status awardStatus 
	from bt_cuser_rebate r LEFT JOIN bt_cuser c ON r.uid = c.id LEFT JOIN bt_apply_loan a ON r.apply_id = a.id 
	where r.inviter_id=#{id} and r.rebate_status > 0  ORDER BY a.judge_time DESC LIMIT #{page},#{pageSize} 
  </select>
  
  <!-- (金赋用户)根据邀请人id 查询其邀请的好友申请成功的所有贷款 -->
  <select id="queryLoansByIvtId" resultType="com.baiwang.banktax.beans.InviteeBean">
  	SELECT cu.id, cu.user_name as userName,al.approve_quota as approveQuota,al.judge_time as judgeTime
  	FROM bt_cuser cu,bt_apply_loan al 
  	WHERE cu.id=al.uid AND cu.invite_uid=#{id} AND al.approve_status in('1','3') AND isdel = '0'
  	ORDER BY al.judge_time DESC
  	limit #{page},#{pageSize}
  </select>
  
    <!-- (金赋用户)根据邀请人id 查询其邀请的好友申请成功的所有贷款的总数 -->
  <select id="queryLoansByIvtIdCount" resultType="java.lang.Integer">
  	SELECT COUNT(cu.id)
  	FROM bt_cuser cu,bt_apply_loan al 
  	WHERE cu.id=al.uid AND cu.invite_uid=#{id} AND al.approve_status in('1','3') AND isdel = '0'
  </select>
  
  <!-- 用户查询邀请的人总数 v2 -->
  <select id="queryInviterTotal" resultType="java.lang.Integer">
  	select count(c.id) 
  	from bt_cuser c 
  	where invite_uid = #{id}
  </select>
  <!-- 企业用户查询奖励总数 v2 -->
  <select id="queryAwardTotal" resultType="java.lang.Integer">
  	SELECT count(r.apply_id) 
	from bt_cuser_rebate r LEFT JOIN bt_cuser c ON r.inviter_id = c.id LEFT JOIN bt_apply_loan a ON r.apply_id = a.id 
	where r.inviter_id=#{id} and r.rebate_status > 0  
  </select>

</mapper>